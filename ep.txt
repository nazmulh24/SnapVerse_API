🌟 SnapVerse API Endpoints Documentation

===============================
🔐 AUTHENTICATION ENDPOINTS
===============================
- POST /api/v1/auth/users/                    → Register new user
  Fields: username, email, password, first_name, last_name, re_password
- POST /api/v1/auth/jwt/create/              → Login (get JWT token)
  Fields: username/email, password
- POST /api/v1/auth/jwt/refresh/             → Refresh JWT token
- POST /api/v1/auth/jwt/verify/              → Verify JWT token
- POST /api/v1/auth/users/set_password/      → Change password
- POST /api/v1/auth/users/reset_password/    → Reset password
- POST /api/v1/auth/users/activation/        → Activate account

===============================
👤 USER ENDPOINTS
===============================
- GET /api/v1/users/                         → List all users (with search)
  Query params: search (username, first_name, last_name, email)
- GET /api/v1/users/{username}/              → Get user profile by username
- GET /api/v1/users/{username}/posts/        → Get user's posts
- GET /api/v1/users/{username}/followers/    → Get user's followers list
- GET /api/v1/users/{username}/following/    → Get user's following list

===============================
📱 POST ENDPOINTS
===============================

📋 Post CRUD:
- GET /api/v1/posts/                         → List all posts (with filters)
  Filters: privacy, user | Search: caption, location, user__username
  Ordering: created_at, updated_at (default: -created_at)
- POST /api/v1/posts/                        → Create new post
  Fields: caption, image, video, location, privacy (public/private/followers)
- GET /api/v1/posts/{id}/                    → Get specific post details
- PATCH /api/v1/posts/{id}/                  → Update post (owner only)
  Fields: caption, image, video, location, privacy
- DELETE /api/v1/posts/{id}/                 → Delete post (owner only)

📈 Post Actions:
- GET /api/v1/posts/my_posts/                → Get current user's posts
- GET /api/v1/posts/feed/                    → Get personalized feed

❤️ Post Reactions:
- POST /api/v1/posts/{id}/react/             → Add/update/toggle reaction
  Fields: reaction (like/dislike/love/haha/wow/sad/angry)
- DELETE /api/v1/posts/{id}/react/           → Remove user's reaction
- GET /api/v1/posts/{id}/reactions/          → Get all reactions on post
  Query params: type (filter by reaction type)

💬 Post Comments:
- GET /api/v1/posts/{id}/comments/           → Get post comments (top-level only)
- POST /api/v1/posts/{id}/comments/          → Add comment to post
  Fields: text, parent_comment (optional for replies)

===============================
💬 COMMENT ENDPOINTS
===============================

📋 Comment CRUD:
- GET /api/v1/comments/                      → List all comments with post info
- GET /api/v1/comments/{id}/                 → Get specific comment
- PATCH /api/v1/comments/{id}/               → Update comment (owner only)
  Fields: text
- DELETE /api/v1/comments/{id}/              → Delete comment (owner/post owner/admin)

💭 Comment Replies:
- GET /api/v1/comments/{id}/replies/         → Get comment replies
- POST /api/v1/comments/{id}/replies/        → Reply to comment
  Fields: text

🔗 Nested Comments:
- GET /api/v1/posts/{post_id}/comments/      → Get post comments (nested route)
- POST /api/v1/posts/{post_id}/comments/     → Add comment (nested route)
- GET /api/v1/posts/{post_id}/comments/{id}/ → Get specific comment (nested)
- PATCH /api/v1/posts/{post_id}/comments/{id}/ → Update comment (nested)
- DELETE /api/v1/posts/{post_id}/comments/{id}/ → Delete comment (nested)

===============================
👥 FOLLOW SYSTEM ENDPOINTS
===============================

📊 Follow Statistics:
- GET /api/v1/follows/                       → Get follow statistics
  Response: followers_count, following_count, pending_requests_count

🔄 Follow Actions:
- POST /api/v1/follows/follow_user/          → Follow a user
  Fields: user_id
  Response: success, user_id, user details, follow_id, is_pending, is_approved, status
- POST /api/v1/follows/unfollow_user/        → Unfollow a user
  Fields: user_id
  Response: success, message, user_id, user details

📋 Follow Lists:
- GET /api/v1/follows/following/             → Users you're following (paginated - 20/page)
- GET /api/v1/follows/followers/             → Your followers (paginated - 20/page)
- GET /api/v1/follows/pending_requests/      → Pending follow requests (paginated - 20/page)

✅ Request Management:
- POST /api/v1/follows/pending_requests/     → Approve/Reject follow requests
  Fields: id (request ID), action (choice: "Approve" or "Reject")
  Response: message (success confirmation)

===============================
🔧 TECHNICAL DETAILS
===============================

🔐 Authentication:
- All endpoints require JWT authentication except:
  - User registration/login
  - Public user profiles (if not private)
  - Public posts (privacy="public")

📄 Pagination:
- Users: 15 per page
- Posts: 10 per page  
- Comments: 20 per page
- Follows: 20 per page

🔒 Privacy & Permissions:
- Posts: public/private/followers visibility
- Users: can be private (requires following to see content)
- Comments: owner can edit, owner/post-owner/admin can delete
- Follows: automatic approval for public users, pending for private users

📱 Media Support:
- Posts support both image and video uploads
- Profile pictures supported in user profiles

🔍 Search & Filtering:
- Users: searchable by username, name, email
- Posts: filterable by privacy, user; searchable by caption, location, username
- Comments: automatically linked to posts and users

===============================
🚀 API BASE URL
===============================
Base URL: http://127.0.0.1:8000/api/v1/

All endpoints should be prefixed with the base URL.
Example: GET http://127.0.0.1:8000/api/v1/posts/
